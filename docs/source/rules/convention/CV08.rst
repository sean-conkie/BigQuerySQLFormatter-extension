=================================================
Rule: Use ``LEFT join`` Instead of ``RIGHT join``
=================================================

**Rule Code:** ``CV08``

**Name:** ``left_join``

Overview
--------

The SQL ``join`` operations allow combining records from two or more tables based on a related column. There are various types of joins, such as ``INNER join``, ``LEFT join``, and ``RIGHT join``. While both ``LEFT join`` and ``RIGHT join`` can achieve the same results by reversing the table order, the **best practice** is to favor the use of ``LEFT join`` over ``RIGHT join``.

Explanation
-----------

Anti-pattern: Using ``RIGHT join``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The use of ``RIGHT join`` in SQL is generally considered an anti-pattern for several reasons:

- It reverses the typical left-to-right reading flow of SQL queries.
- It can make queries less readable and harder to understand, especially in complex queries.
- ``RIGHT join`` requires the reader to mentally reverse the order of tables to comprehend the results.

**Example of ``RIGHT join`` usage (Anti-pattern):**

.. code-block:: sql

    select foo.col1,
           bar.col2
      from foo
     right join bar
        on foo.bar_id = bar.id;

Best Practice: Use ``LEFT join`` Instead
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

It is recommended to use ``LEFT join`` because it:

- Aligns with the natural left-to-right flow of reading and writing queries.
- Enhances readability and consistency in SQL code.
- Is more commonly used and understood in practice.

**Refactored query using ``LEFT join`` (Best practice):**

.. code-block:: sql

    selec foo.col1,
          bar.col2
     from bar
     left join foo
       on foo.bar_id = bar.id;

Benefits of ``LEFT join``
-------------------------

- The results and logic remain the same as ``RIGHT join`` but in a more intuitive manner.
- Promotes better maintainability and reduces confusion for other developers reviewing the code.

Conclusion
----------

While ``RIGHT join`` and ``LEFT join`` are functionally equivalent when the table order is reversed, it is a best practice to use ``LEFT join`` for better readability, consistency, and maintainability in SQL queries.

Groups:
-------

- `all <../..>`_
- `convention <../..#convention-rules>`_