================================================
Rule: Statements Should Be Indented Consistently
================================================

**Rule Code:** ``LT02``

**Name:** ``indent``

Overview
--------

In SQL queries, consistent indentation of statements is essential for improving readability, maintainability, and clarity. Proper indentation allows developers to quickly understand the structure of a query, making it easier to spot errors, follow logic, and maintain the code over time. Consistently indented SQL queries also promote better collaboration within teams by ensuring that code is structured in a predictable and clean manner.

Explanation
-----------

Anti-pattern: Inconsistent Statement Indentation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When SQL statements are not consistently indented, it becomes difficult to understand the flow and structure of the query. Misaligned statements make it harder to identify which elements belong together, resulting in potential errors during query writing and debugging.

**Example of Inconsistent Statement Indentation (Anti-pattern):**

.. code-block:: sql

    select t.col1,
    t.col2
    from dataset.table t
    where t.col1 > 100
     and t.col2 = 'active';

In this example, the lack of consistent indentation between the `SELECT`, `FROM`, and `WHERE` clauses reduces readability, making the query appear disorganized and harder to maintain.

Best Practice: Consistent Indentation of Statements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For improved readability and maintainability, all SQL statements should be indented consistently. A common practice is to align columns in the `SELECT` clause vertically, with subsequent clauses (`FROM`, `WHERE`, etc.) indented appropriately. This makes it easier to understand the flow of the query and simplifies maintenance.

**Refactored Example with Consistent Statement Indentation (Best Practice):**

.. code-block:: sql

    select t.col1,
           t.col2
      from dataset.table t
     where t.col1 > 100
       and t.col2 = 'active';

In this refactored example, the `SELECT`, `FROM`, and `WHERE` clauses are properly indented, and the conditions within the `WHERE` clause are aligned. This creates a more readable and organized query, making it easier to follow and maintain.

Conclusion
----------

Consistent indentation of SQL statements is key to improving query readability and maintainability. Following this rule ensures that SQL queries are structured clearly, making them easier to work with in collaborative environments. Clean and predictable indentation helps developers avoid errors and makes the code easier to understand and maintain.

Groups:
-------

- `all <../..>`_
- `layout <../..#layout-rules>`_